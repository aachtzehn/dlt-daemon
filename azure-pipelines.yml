# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: CMake@1
  inputs:
    cmakeArgs: -DWITH_DLT_UNIT_TESTS=ON ..
- task: CMake@1
  inputs:
    cmakeArgs: --build . 
- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.Repository.LocalPath)/tests
    Contents: 'test*'
    TargetFolder: $(Build.Repository.LocalPath)/  
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/gtest_dlt_daemon_common --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test.xml
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/gtest_dlt_common --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test2.xml
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/gtest_dlt_daemon_event_handler --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test3.xml
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/gtest_dlt_daemon_offline_log --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test5.xml
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/gtest_dlt_user --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test6.xml
- task: CmdLine@2
  inputs:
    script: $(Build.Repository.LocalPath)/build/tests/dlt_env_ll_unit_test --gtest_output=xml:$(Build.Repository.LocalPath)/build/tests/test7.xml
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test*.xml'
    testRunTitle: 'dlt-daemon tests'
